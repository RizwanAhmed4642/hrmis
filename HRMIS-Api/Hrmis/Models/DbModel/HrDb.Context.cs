

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Hrmis.Models.DbModel
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class HR_System : DbContext
{
    public HR_System()
        : base("name=HR_System")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }

    public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }

    public virtual DbSet<C_ErpComponent> C_ErpComponent { get; set; }

    public virtual DbSet<C_ErpField> C_ErpField { get; set; }

    public virtual DbSet<C_ErpModule> C_ErpModule { get; set; }

    public virtual DbSet<C_ErpModuleComponents> C_ErpModuleComponents { get; set; }

    public virtual DbSet<C_ErpUserFields> C_ErpUserFields { get; set; }

    public virtual DbSet<C_ErpUserModuleComponents> C_ErpUserModuleComponents { get; set; }

    public virtual DbSet<C_Role> C_Role { get; set; }

    public virtual DbSet<C_SessionLog> C_SessionLog { get; set; }

    public virtual DbSet<C_User> C_User { get; set; }

    public virtual DbSet<C_UserAuth> C_UserAuth { get; set; }

    public virtual DbSet<C_UserClaim> C_UserClaim { get; set; }

    public virtual DbSet<C_UserContact> C_UserContact { get; set; }

    public virtual DbSet<C_UserLogin> C_UserLogin { get; set; }

    public virtual DbSet<C_UserRight> C_UserRight { get; set; }

    public virtual DbSet<AdhocApplicant> AdhocApplicants { get; set; }

    public virtual DbSet<AdhocApplicantDocument> AdhocApplicantDocuments { get; set; }

    public virtual DbSet<AdhocApplicantExperience> AdhocApplicantExperiences { get; set; }

    public virtual DbSet<AdhocApplicantLog> AdhocApplicantLogs { get; set; }

    public virtual DbSet<AdhocApplicantPMC> AdhocApplicantPMCs { get; set; }

    public virtual DbSet<AdhocApplicantPMCQualification> AdhocApplicantPMCQualifications { get; set; }

    public virtual DbSet<AdhocApplicantQualification> AdhocApplicantQualifications { get; set; }

    public virtual DbSet<AdhocApplicantStatu> AdhocApplicantStatus { get; set; }

    public virtual DbSet<AdhocApplication> AdhocApplications { get; set; }

    public virtual DbSet<AdhocApplicationGrievance> AdhocApplicationGrievances { get; set; }

    public virtual DbSet<AdhocApplicationGrievanceStatu> AdhocApplicationGrievanceStatus { get; set; }

    public virtual DbSet<AdhocApplicationLog> AdhocApplicationLogs { get; set; }

    public virtual DbSet<AdhocApplicationMark> AdhocApplicationMarks { get; set; }

    public virtual DbSet<AdhocApplicationPreference> AdhocApplicationPreferences { get; set; }

    public virtual DbSet<AdhocApplicationStatu> AdhocApplicationStatus { get; set; }

    public virtual DbSet<AdhocApplicationVerification> AdhocApplicationVerifications { get; set; }

    public virtual DbSet<AdhocDescription> AdhocDescriptions { get; set; }

    public virtual DbSet<AdhocDistrictOpenedBHU> AdhocDistrictOpenedBHUs { get; set; }

    public virtual DbSet<AdhocDistrictOpenedBHU2> AdhocDistrictOpenedBHU2 { get; set; }

    public virtual DbSet<AdhocDistrictQuota> AdhocDistrictQuotas { get; set; }

    public virtual DbSet<AdhocDocument> AdhocDocuments { get; set; }

    public virtual DbSet<AdhocDocumentRequired> AdhocDocumentRequireds { get; set; }

    public virtual DbSet<AdhocGreivanceUpload> AdhocGreivanceUploads { get; set; }

    public virtual DbSet<AdhocHF> AdhocHFs { get; set; }

    public virtual DbSet<AdhocHFOpened> AdhocHFOpeneds { get; set; }

    public virtual DbSet<AdhocHFOpened2> AdhocHFOpened2 { get; set; }

    public virtual DbSet<AdhocInterview> AdhocInterviews { get; set; }

    public virtual DbSet<AdhocInterviewBatch> AdhocInterviewBatches { get; set; }

    public virtual DbSet<AdhocInterviewBatchApplication> AdhocInterviewBatchApplications { get; set; }

    public virtual DbSet<AdhocInterviewBatchCommittee> AdhocInterviewBatchCommittees { get; set; }

    public virtual DbSet<AdhocJob> AdhocJobs { get; set; }

    public virtual DbSet<AdhocLog> AdhocLogs { get; set; }

    public virtual DbSet<AdhocMerit> AdhocMerits { get; set; }

    public virtual DbSet<AdhocMeritLocked> AdhocMeritLockeds { get; set; }

    public virtual DbSet<AdhocMeritVerification> AdhocMeritVerifications { get; set; }

    public virtual DbSet<AdhocPosting> AdhocPostings { get; set; }

    public virtual DbSet<AdhocPostingFinal> AdhocPostingFinals { get; set; }

    public virtual DbSet<AdhocPostingLog> AdhocPostingLogs { get; set; }

    public virtual DbSet<AdhocRecruitementCommittee> AdhocRecruitementCommittees { get; set; }

    public virtual DbSet<AdhocScrutiny> AdhocScrutinies { get; set; }

    public virtual DbSet<AdhocScrutinyCommittee> AdhocScrutinyCommittees { get; set; }

    public virtual DbSet<AdhocScrutinyMinute> AdhocScrutinyMinutes { get; set; }

    public virtual DbSet<AdhocScrutinyReason> AdhocScrutinyReasons { get; set; }

    public virtual DbSet<AdhocSelectedMerit> AdhocSelectedMerits { get; set; }

    public virtual DbSet<APMOPref> APMOPrefs { get; set; }

    public virtual DbSet<ApplicantQualification> ApplicantQualifications { get; set; }

    public virtual DbSet<ApplicationAction> ApplicationActions { get; set; }

    public virtual DbSet<ApplicationAttachment> ApplicationAttachments { get; set; }

    public virtual DbSet<ApplicationDocument> ApplicationDocuments { get; set; }

    public virtual DbSet<ApplicationDueDate> ApplicationDueDates { get; set; }

    public virtual DbSet<ApplicationFileRecosition> ApplicationFileRecositions { get; set; }

    public virtual DbSet<ApplicationFileRecositionLog> ApplicationFileRecositionLogs { get; set; }

    public virtual DbSet<ApplicationLog> ApplicationLogs { get; set; }

    public virtual DbSet<ApplicationMaster> ApplicationMasters { get; set; }

    public virtual DbSet<ApplicationMutualCode> ApplicationMutualCodes { get; set; }

    public virtual DbSet<ApplicationPersonAppeared> ApplicationPersonAppeareds { get; set; }

    public virtual DbSet<ApplicationPreference> ApplicationPreferences { get; set; }

    public virtual DbSet<ApplicationPurpose> ApplicationPurposes { get; set; }

    public virtual DbSet<ApplicationRequest> ApplicationRequests { get; set; }

    public virtual DbSet<ApplicationSource> ApplicationSources { get; set; }

    public virtual DbSet<ApplicationStatu> ApplicationStatus { get; set; }

    public virtual DbSet<ApplicationTracking> ApplicationTrackings { get; set; }

    public virtual DbSet<ApplicationType> ApplicationTypes { get; set; }

    public virtual DbSet<AppOrder> AppOrders { get; set; }

    public virtual DbSet<AppRoute> AppRoutes { get; set; }

    public virtual DbSet<AppTypeDoc> AppTypeDocs { get; set; }

    public virtual DbSet<AppTypePendancy> AppTypePendancies { get; set; }

    public virtual DbSet<AwaitingPosting> AwaitingPostings { get; set; }

    public virtual DbSet<Cadre> Cadres { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<CLR> CLRs { get; set; }

    public virtual DbSet<COVID19Orders> COVID19Orders { get; set; }

    public virtual DbSet<CovidFacility> CovidFacilities { get; set; }

    public virtual DbSet<CovidFacilityType> CovidFacilityTypes { get; set; }

    public virtual DbSet<CovidStaff> CovidStaffs { get; set; }

    public virtual DbSet<COVIDTrend> COVIDTrends { get; set; }

    public virtual DbSet<CovidTrendLog> CovidTrendLogs { get; set; }

    public virtual DbSet<DDS_Attachments> DDS_Attachments { get; set; }

    public virtual DbSet<DDS_Files> DDS_Files { get; set; }

    public virtual DbSet<DDsDetail> DDsDetails { get; set; }

    public virtual DbSet<DDSSouth> DDSSouths { get; set; }

    public virtual DbSet<Degree> Degrees { get; set; }

    public virtual DbSet<DermaApplication> DermaApplications { get; set; }

    public virtual DbSet<DeviceRegistration> DeviceRegistrations { get; set; }

    public virtual DbSet<Disability> Disabilities { get; set; }

    public virtual DbSet<DisposalOf> DisposalOfs { get; set; }

    public virtual DbSet<DistrictLatLong> DistrictLatLongs { get; set; }

    public virtual DbSet<District> Districts { get; set; }

    public virtual DbSet<DistrictsDistance> DistrictsDistances { get; set; }

    public virtual DbSet<DivisionLatLong> DivisionLatLongs { get; set; }

    public virtual DbSet<Division> Divisions { get; set; }

    public virtual DbSet<Domicile> Domiciles { get; set; }

    public virtual DbSet<Emp_Shift> Emp_Shift { get; set; }

    public virtual DbSet<Empattendance> Empattendances { get; set; }

    public virtual DbSet<EmpLeaveForm> EmpLeaveForms { get; set; }

    public virtual DbSet<EmpLeaveStatu> EmpLeaveStatus { get; set; }

    public virtual DbSet<EmpLeaveType> EmpLeaveTypes { get; set; }

    public virtual DbSet<EmployeePosting> EmployeePostings { get; set; }

    public virtual DbSet<EmpRoster> EmpRosters { get; set; }

    public virtual DbSet<EmpTask_Status> EmpTask_Status { get; set; }

    public virtual DbSet<EmpTask> EmpTasks { get; set; }

    public virtual DbSet<Entity> Entities { get; set; }

    public virtual DbSet<Entity_Lifecycle> Entity_Lifecycle { get; set; }

    public virtual DbSet<Entity_Log> Entity_Log { get; set; }

    public virtual DbSet<Entity_Modified_Log> Entity_Modified_Log { get; set; }

    public virtual DbSet<EntityField> EntityFields { get; set; }

    public virtual DbSet<EPIDataTemp> EPIDataTemps { get; set; }

    public virtual DbSet<EpiFacilitiesTemp> EpiFacilitiesTemps { get; set; }

    public virtual DbSet<ESR> ESRs { get; set; }

    public virtual DbSet<EsrAttachment> EsrAttachments { get; set; }

    public virtual DbSet<ESRDetail> ESRDetails { get; set; }

    public virtual DbSet<EsrForwardToOfficer> EsrForwardToOfficers { get; set; }

    public virtual DbSet<EsrSectionOfficer> EsrSectionOfficers { get; set; }

    public virtual DbSet<EsrSigned> EsrSigneds { get; set; }

    public virtual DbSet<FCLEAVETDTL> FCLEAVETDTLs { get; set; }

    public virtual DbSet<FCLEAVETYP> FCLEAVETYPs { get; set; }

    public virtual DbSet<FCPromotion> FCPromotions { get; set; }

    public virtual DbSet<FCRequest> FCRequests { get; set; }

    public virtual DbSet<FCTransfer> FCTransfers { get; set; }

    public virtual DbSet<FileDetail> FileDetails { get; set; }

    public virtual DbSet<FileMoveDetail> FileMoveDetails { get; set; }

    public virtual DbSet<FileMoveMaster> FileMoveMasters { get; set; }

    public virtual DbSet<FileRequestStatu> FileRequestStatus { get; set; }

    public virtual DbSet<FilesMaster> FilesMasters { get; set; }

    public virtual DbSet<FilesUpdated> FilesUpdateds { get; set; }

    public virtual DbSet<FileType> FileTypes { get; set; }

    public virtual DbSet<FingerPrint> FingerPrints { get; set; }

    public virtual DbSet<Grading> Gradings { get; set; }

    public virtual DbSet<GradingVal> GradingVals { get; set; }

    public virtual DbSet<GSMNETWORK> GSMNETWORKs { get; set; }

    public virtual DbSet<HealthFacility> HealthFacilities { get; set; }

    public virtual DbSet<HF_Code_Map> HF_Code_Map { get; set; }

    public virtual DbSet<HFAC> HFACs { get; set; }

    public virtual DbSet<HFBlock> HFBlocks { get; set; }

    public virtual DbSet<HFCategory> HFCategories { get; set; }

    public virtual DbSet<HFDistance> HFDistances { get; set; }

    public virtual DbSet<HFMode> HFModes { get; set; }

    public virtual DbSet<HFOpenedLHR> HFOpenedLHRs { get; set; }

    public virtual DbSet<HFOpenedPosting> HFOpenedPostings { get; set; }

    public virtual DbSet<HFPhoto> HFPhotos { get; set; }

    public virtual DbSet<HFRecord> HFRecords { get; set; }

    public virtual DbSet<HFService> HFServices { get; set; }

    public virtual DbSet<HFTown> HFTowns { get; set; }

    public virtual DbSet<HFType> HFTypes { get; set; }

    public virtual DbSet<HFUC> HFUCs { get; set; }

    public virtual DbSet<HFUCM> HFUCMs { get; set; }

    public virtual DbSet<HFWardBed> HFWardBeds { get; set; }

    public virtual DbSet<HFWard> HFWards { get; set; }

    public virtual DbSet<HISDU_DataFrequency> HISDU_DataFrequency { get; set; }

    public virtual DbSet<HISDU_Department> HISDU_Department { get; set; }

    public virtual DbSet<HISDU_EmpStatus> HISDU_EmpStatus { get; set; }

    public virtual DbSet<HISDU_Holidays> HISDU_Holidays { get; set; }

    public virtual DbSet<HISDU_HrProfile> HISDU_HrProfile { get; set; }

    public virtual DbSet<HISDU_MonthlyLeave> HISDU_MonthlyLeave { get; set; }

    public virtual DbSet<HISDU_Project_Type> HISDU_Project_Type { get; set; }

    public virtual DbSet<HISDU_Projects> HISDU_Projects { get; set; }

    public virtual DbSet<HISDU_Projects_CurrentStatus> HISDU_Projects_CurrentStatus { get; set; }

    public virtual DbSet<HISDU_Team_Members> HISDU_Team_Members { get; set; }

    public virtual DbSet<HISDU_Teams> HISDU_Teams { get; set; }

    public virtual DbSet<HrAcceptance> HrAcceptances { get; set; }

    public virtual DbSet<HrApplication> HrApplications { get; set; }

    public virtual DbSet<HrAttachedPerson> HrAttachedPersons { get; set; }

    public virtual DbSet<HrAttendance> HrAttendances { get; set; }

    public virtual DbSet<HrComplain> HrComplains { get; set; }

    public virtual DbSet<HrDepartment> HrDepartments { get; set; }

    public virtual DbSet<HrDesignation> HrDesignations { get; set; }

    public virtual DbSet<HrDesignationTemp> HrDesignationTemps { get; set; }

    public virtual DbSet<HrDuplicationLog> HrDuplicationLogs { get; set; }

    public virtual DbSet<HrEmpMode> HrEmpModes { get; set; }

    public virtual DbSet<HrFile> HrFiles { get; set; }

    public virtual DbSet<HrFileDetail> HrFileDetails { get; set; }

    public virtual DbSet<HrFocalPerson> HrFocalPersons { get; set; }

    public virtual DbSet<HrFp> HrFps { get; set; }

    public virtual DbSet<HrHealthWorker> HrHealthWorkers { get; set; }

    public virtual DbSet<HrInquiry> HrInquiries { get; set; }

    public virtual DbSet<HrInquiryPenalty> HrInquiryPenalties { get; set; }

    public virtual DbSet<HrLanguage> HrLanguages { get; set; }

    public virtual DbSet<HrLeaveRecord> HrLeaveRecords { get; set; }

    public virtual DbSet<HrMarking> HrMarkings { get; set; }

    public virtual DbSet<HrPost_Type> HrPost_Type { get; set; }

    public virtual DbSet<HrPosting> HrPostings { get; set; }

    public virtual DbSet<HrPostingMode> HrPostingModes { get; set; }

    public virtual DbSet<HrPostingStatu> HrPostingStatus { get; set; }

    public virtual DbSet<HrProfile> HrProfiles { get; set; }

    public virtual DbSet<HrProfileEditRequest> HrProfileEditRequests { get; set; }

    public virtual DbSet<HrProfileReq> HrProfileReqs { get; set; }

    public virtual DbSet<HrProfileSp> HrProfileSps { get; set; }

    public virtual DbSet<HrProfileStatu> HrProfileStatus { get; set; }

    public virtual DbSet<HrQualification> HrQualifications { get; set; }

    public virtual DbSet<HrReligion> HrReligions { get; set; }

    public virtual DbSet<HrReview> HrReviews { get; set; }

    public virtual DbSet<HrReviewStatu> HrReviewStatus { get; set; }

    public virtual DbSet<HrReviewSubmission> HrReviewSubmissions { get; set; }

    public virtual DbSet<HrScale> HrScales { get; set; }

    public virtual DbSet<HrSeniority> HrSeniorities { get; set; }

    public virtual DbSet<HrSeniorityApplication> HrSeniorityApplications { get; set; }

    public virtual DbSet<HrSeniorityApplication_Fixed> HrSeniorityApplication_Fixed { get; set; }

    public virtual DbSet<HrSeniorityApplicationLog> HrSeniorityApplicationLogs { get; set; }

    public virtual DbSet<HrSeniorityDCPharmApplication> HrSeniorityDCPharmApplications { get; set; }

    public virtual DbSet<HrSeniorityDCPharmApplicationFixed> HrSeniorityDCPharmApplicationFixeds { get; set; }

    public virtual DbSet<HrServiceHistory> HrServiceHistories { get; set; }

    public virtual DbSet<HrSMSEmployee> HrSMSEmployees { get; set; }

    public virtual DbSet<InquiryStatu> InquiryStatus { get; set; }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<JobApplicant> JobApplicants { get; set; }

    public virtual DbSet<JobApplicantDocument> JobApplicantDocuments { get; set; }

    public virtual DbSet<JobApplicantExperience> JobApplicantExperiences { get; set; }

    public virtual DbSet<JobApplicantStatu> JobApplicantStatus { get; set; }

    public virtual DbSet<JobApplication> JobApplications { get; set; }

    public virtual DbSet<JobApplicationPreference> JobApplicationPreferences { get; set; }

    public virtual DbSet<JobDescription> JobDescriptions { get; set; }

    public virtual DbSet<JobDocument> JobDocuments { get; set; }

    public virtual DbSet<JobDocumentRequired> JobDocumentRequireds { get; set; }

    public virtual DbSet<JobHF> JobHFs { get; set; }

    public virtual DbSet<JobLog> JobLogs { get; set; }

    public virtual DbSet<JobPosting> JobPostings { get; set; }

    public virtual DbSet<LawBench> LawBenches { get; set; }

    public virtual DbSet<LawCallsList> LawCallsLists { get; set; }

    public virtual DbSet<LawCallsListOfficer> LawCallsListOfficers { get; set; }

    public virtual DbSet<LawCallsListRemark> LawCallsListRemarks { get; set; }

    public virtual DbSet<LawCasePetitioner> LawCasePetitioners { get; set; }

    public virtual DbSet<LawCaseRepresentative> LawCaseRepresentatives { get; set; }

    public virtual DbSet<LawCas> LawCases { get; set; }

    public virtual DbSet<LawCaseStatu> LawCaseStatus { get; set; }

    public virtual DbSet<LawCaseStatusModifiedLog> LawCaseStatusModifiedLogs { get; set; }

    public virtual DbSet<LawCaseType> LawCaseTypes { get; set; }

    public virtual DbSet<LawCourt> LawCourts { get; set; }

    public virtual DbSet<LawDepartment> LawDepartments { get; set; }

    public virtual DbSet<LawFile> LawFiles { get; set; }

    public virtual DbSet<LawFilesImage> LawFilesImages { get; set; }

    public virtual DbSet<LawFilesOfficer> LawFilesOfficers { get; set; }

    public virtual DbSet<LawFilesPetitioner> LawFilesPetitioners { get; set; }

    public virtual DbSet<LawFilesRepresentative> LawFilesRepresentatives { get; set; }

    public virtual DbSet<LawHearing> LawHearings { get; set; }

    public virtual DbSet<LawHearingJudge> LawHearingJudges { get; set; }

    public virtual DbSet<LawHearingLawyer> LawHearingLawyers { get; set; }

    public virtual DbSet<LawJudge> LawJudges { get; set; }

    public virtual DbSet<LawLawyer> LawLawyers { get; set; }

    public virtual DbSet<LawOnBehalfOf> LawOnBehalfOfs { get; set; }

    public virtual DbSet<LawPetitioner> LawPetitioners { get; set; }

    public virtual DbSet<LawRepresentative> LawRepresentatives { get; set; }

    public virtual DbSet<LeaveApplication> LeaveApplications { get; set; }

    public virtual DbSet<LeaveHistory> LeaveHistories { get; set; }

    public virtual DbSet<LeaveOrder> LeaveOrders { get; set; }

    public virtual DbSet<LeaveStatu> LeaveStatus { get; set; }

    public virtual DbSet<LeaveType> LeaveTypes { get; set; }

    public virtual DbSet<MedicineMaster> MedicineMasters { get; set; }

    public virtual DbSet<MeritActiveDesignation> MeritActiveDesignations { get; set; }

    public virtual DbSet<MeritDiplomaCandidate> MeritDiplomaCandidates { get; set; }

    public virtual DbSet<MeritDiplomaCandidateDetail> MeritDiplomaCandidateDetails { get; set; }

    public virtual DbSet<MeritGrievience> MeritGrieviences { get; set; }

    public virtual DbSet<MeritMark> MeritMarks { get; set; }

    public virtual DbSet<MeritPG> MeritPGs { get; set; }

    public virtual DbSet<MeritPGDistrict> MeritPGDistricts { get; set; }

    public virtual DbSet<MeritPosting> MeritPostings { get; set; }

    public virtual DbSet<MeritPreference> MeritPreferences { get; set; }

    public virtual DbSet<MeritPreferencesFinal> MeritPreferencesFinals { get; set; }

    public virtual DbSet<Merit> Merits { get; set; }

    public virtual DbSet<MeritsVp> MeritsVps { get; set; }

    public virtual DbSet<MeritsVpDistrict> MeritsVpDistricts { get; set; }

    public virtual DbSet<MessageLog> MessageLogs { get; set; }

    public virtual DbSet<MobileApp> MobileApps { get; set; }

    public virtual DbSet<Monthlydate> Monthlydates { get; set; }

    public virtual DbSet<MWPointType> MWPointTypes { get; set; }

    public virtual DbSet<MWRoute> MWRoutes { get; set; }

    public virtual DbSet<MWRouteDetail> MWRouteDetails { get; set; }

    public virtual DbSet<NotificationLog> NotificationLogs { get; set; }

    public virtual DbSet<NotificationProject> NotificationProjects { get; set; }

    public virtual DbSet<NotificationSM> NotificationSMS { get; set; }

    public virtual DbSet<NotificationType> NotificationTypes { get; set; }

    public virtual DbSet<NursesVPTemp26> NursesVPTemp26 { get; set; }

    public virtual DbSet<Office> Offices { get; set; }

    public virtual DbSet<Officer> Officers { get; set; }

    public virtual DbSet<OrderTracking> OrderTrackings { get; set; }

    public virtual DbSet<P_SConcernedCadres> P_SConcernedCadres { get; set; }

    public virtual DbSet<P_SConcernedDesignations> P_SConcernedDesignations { get; set; }

    public virtual DbSet<P_SConcernedOfficers> P_SConcernedOfficers { get; set; }

    public virtual DbSet<P_SOfficers> P_SOfficers { get; set; }

    public virtual DbSet<PenaltyType> PenaltyTypes { get; set; }

    public virtual DbSet<PensionDocument> PensionDocuments { get; set; }

    public virtual DbSet<PensionDocumentAttached> PensionDocumentAttacheds { get; set; }

    public virtual DbSet<PER> PERs { get; set; }

    public virtual DbSet<PerDeferment> PerDeferments { get; set; }

    public virtual DbSet<PerGrading> PerGradings { get; set; }

    public virtual DbSet<PerImage> PerImages { get; set; }

    public virtual DbSet<PerInquiry> PerInquiries { get; set; }

    public virtual DbSet<PerPrfmAssment> PerPrfmAssments { get; set; }

    public virtual DbSet<PerTargetAchievement> PerTargetAchievements { get; set; }

    public virtual DbSet<PerTraining> PerTrainings { get; set; }

    public virtual DbSet<PerType> PerTypes { get; set; }

    public virtual DbSet<PHFMCOrder> PHFMCOrders { get; set; }

    public virtual DbSet<PrfmAssment> PrfmAssments { get; set; }

    public virtual DbSet<ProfileAttachment> ProfileAttachments { get; set; }

    public virtual DbSet<ProfileAttachmentType> ProfileAttachmentTypes { get; set; }

    public virtual DbSet<ProfileRemark> ProfileRemarks { get; set; }

    public virtual DbSet<Project> Projects { get; set; }

    public virtual DbSet<PromotedCandidate> PromotedCandidates { get; set; }

    public virtual DbSet<PromotionApply> PromotionApplies { get; set; }

    public virtual DbSet<PromotionJobApplication> PromotionJobApplications { get; set; }

    public virtual DbSet<PromotionJobApplicationServiceStatement> PromotionJobApplicationServiceStatements { get; set; }

    public virtual DbSet<PSHealthFacility> PSHealthFacilities { get; set; }

    public virtual DbSet<PSHealthProgram> PSHealthPrograms { get; set; }

    public virtual DbSet<PSHealthProject> PSHealthProjects { get; set; }

    public virtual DbSet<PunjabOfficer> PunjabOfficers { get; set; }

    public virtual DbSet<Qualification> Qualifications { get; set; }

    public virtual DbSet<QualificationType> QualificationTypes { get; set; }

    public virtual DbSet<ScrutinyExperience> ScrutinyExperiences { get; set; }

    public virtual DbSet<ScrutinyQualification> ScrutinyQualifications { get; set; }

    public virtual DbSet<SeniorityBatch> SeniorityBatches { get; set; }

    public virtual DbSet<SeniorityDetail> SeniorityDetails { get; set; }

    public virtual DbSet<SeniorityMaster> SeniorityMasters { get; set; }

    public virtual DbSet<Service> Services { get; set; }

    public virtual DbSet<ServiceTemp> ServiceTemps { get; set; }

    public virtual DbSet<SHMEDVP> SHMEDVPs { get; set; }

    public virtual DbSet<ShowOfficerStamp> ShowOfficerStamps { get; set; }

    public virtual DbSet<SignedOrder> SignedOrders { get; set; }

    public virtual DbSet<SMS_Log> SMS_Log { get; set; }

    public virtual DbSet<SMS_Session> SMS_Session { get; set; }

    public virtual DbSet<SMSType> SMSTypes { get; set; }

    public virtual DbSet<Specialization> Specializations { get; set; }

    public virtual DbSet<Subscriber> Subscribers { get; set; }

    public virtual DbSet<Subscription> Subscriptions { get; set; }

    public virtual DbSet<SwmoPromotion> SwmoPromotions { get; set; }

    public virtual DbSet<SwmoPromotionDetail> SwmoPromotionDetails { get; set; }

    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<TehsilLatLong> TehsilLatLongs { get; set; }

    public virtual DbSet<Tehsil> Tehsils { get; set; }

    public virtual DbSet<TehsilsDistance> TehsilsDistances { get; set; }

    public virtual DbSet<TempProfilePhoto> TempProfilePhotoes { get; set; }

    public virtual DbSet<Town> Towns { get; set; }

    public virtual DbSet<Training> Trainings { get; set; }

    public virtual DbSet<TransferAppliationStatu> TransferAppliationStatus { get; set; }

    public virtual DbSet<TransferApplication> TransferApplications { get; set; }

    public virtual DbSet<TransferOrder> TransferOrders { get; set; }

    public virtual DbSet<TransferType> TransferTypes { get; set; }

    public virtual DbSet<User_Activity_Log> User_Activity_Log { get; set; }

    public virtual DbSet<UserDetail> UserDetails { get; set; }

    public virtual DbSet<UserInformation> UserInformations { get; set; }

    public virtual DbSet<UserLevel> UserLevels { get; set; }

    public virtual DbSet<UserLog> UserLogs { get; set; }

    public virtual DbSet<userlogtest> userlogtests { get; set; }

    public virtual DbSet<VacancyQuota> VacancyQuotas { get; set; }

    public virtual DbSet<VP> VPs { get; set; }

    public virtual DbSet<VPChartsCount> VPChartsCounts { get; set; }

    public virtual DbSet<VPDetail> VPDetails { get; set; }

    public virtual DbSet<VpDetailLog> VpDetailLogs { get; set; }

    public virtual DbSet<VPHolder> VPHolders { get; set; }

    public virtual DbSet<VPMaster> VPMasters { get; set; }

    public virtual DbSet<VpMasterLog> VpMasterLogs { get; set; }

    public virtual DbSet<VPostMast> VPostMasts { get; set; }

    public virtual DbSet<VPProfile> VPProfiles { get; set; }

    public virtual DbSet<VPProfileLog> VPProfileLogs { get; set; }

    public virtual DbSet<VpProfileStatu> VpProfileStatus { get; set; }

    public virtual DbSet<VPQ> VPQs { get; set; }

    public virtual DbSet<VPSP> VPSPs { get; set; }

    public virtual DbSet<VpSpecialized> VpSpecializeds { get; set; }

    public virtual DbSet<VpSubscriber> VpSubscribers { get; set; }

    public virtual DbSet<Ward> Wards { get; set; }

    public virtual DbSet<WMO_Grievances> WMO_Grievances { get; set; }

    public virtual DbSet<ApplicationForwardLog> ApplicationForwardLogs { get; set; }

    public virtual DbSet<AppStatusLog> AppStatusLogs { get; set; }

    public virtual DbSet<Cours> Courses { get; set; }

    public virtual DbSet<HealthFacilities_15_04_17> HealthFacilities_15_04_17 { get; set; }

    public virtual DbSet<HealthFacilitiesWithHFAC> HealthFacilitiesWithHFACs { get; set; }

    public virtual DbSet<HFOpenedPosting_10_12_2019> HFOpenedPosting_10_12_2019 { get; set; }

    public virtual DbSet<HISDU_HrProfile_8dec> HISDU_HrProfile_8dec { get; set; }

    public virtual DbSet<HrProfile6feb18> HrProfile6feb18 { get; set; }

    public virtual DbSet<MeritPreferences_10_12_2019> MeritPreferences_10_12_2019 { get; set; }

    public virtual DbSet<MeritPreferencesFinal_10_12_2019> MeritPreferencesFinal_10_12_2019 { get; set; }

    public virtual DbSet<UserLog_bkp> UserLog_bkp { get; set; }

    public virtual DbSet<UserLog25feb22> UserLog25feb22 { get; set; }

    public virtual DbSet<userlog286> userlog286 { get; set; }

    public virtual DbSet<UserLog3Feb22> UserLog3Feb22 { get; set; }

    public virtual DbSet<VPostDtl> VPostDtls { get; set; }

    public virtual DbSet<AAA_SCRIPT_TRANSER_HF> AAA_SCRIPT_TRANSER_HF { get; set; }

    public virtual DbSet<AdhocApplicantDocumentView> AdhocApplicantDocumentViews { get; set; }

    public virtual DbSet<AdhocApplicantQualificationView> AdhocApplicantQualificationViews { get; set; }

    public virtual DbSet<AdhocApplicantView> AdhocApplicantViews { get; set; }

    public virtual DbSet<AdhocApplicationGrievanceV> AdhocApplicationGrievanceVs { get; set; }

    public virtual DbSet<AdhocApplicationMarksView> AdhocApplicationMarksViews { get; set; }

    public virtual DbSet<AdhocApplicationPreferenceView> AdhocApplicationPreferenceViews { get; set; }

    public virtual DbSet<AdhocApplicationView> AdhocApplicationViews { get; set; }

    public virtual DbSet<AdhocDistrictOpenedBHUView> AdhocDistrictOpenedBHUViews { get; set; }

    public virtual DbSet<AdhocDistrictOpenedBHUView2> AdhocDistrictOpenedBHUView2 { get; set; }

    public virtual DbSet<AdhocGreivanceUploadView> AdhocGreivanceUploadViews { get; set; }

    public virtual DbSet<AdhocHFOpenedView> AdhocHFOpenedViews { get; set; }

    public virtual DbSet<AdhocHFOpenedView2> AdhocHFOpenedView2 { get; set; }

    public virtual DbSet<AdhocInterviewBatchApplicationV> AdhocInterviewBatchApplicationVs { get; set; }

    public virtual DbSet<AdhocInterviewView> AdhocInterviewViews { get; set; }

    public virtual DbSet<AdhocJobView> AdhocJobViews { get; set; }

    public virtual DbSet<AdhocMeritLockedView> AdhocMeritLockedViews { get; set; }

    public virtual DbSet<AdhocMeritView> AdhocMeritViews { get; set; }

    public virtual DbSet<AdhocMeritView2> AdhocMeritView2 { get; set; }

    public virtual DbSet<AdhocPostingFinalView> AdhocPostingFinalViews { get; set; }

    public virtual DbSet<AdhocScrutinyView> AdhocScrutinyViews { get; set; }

    public virtual DbSet<APMOPrefsView> APMOPrefsViews { get; set; }

    public virtual DbSet<ApplicantExperience> ApplicantExperiences { get; set; }

    public virtual DbSet<ApplicantPreferenceView> ApplicantPreferenceViews { get; set; }

    public virtual DbSet<ApplicantQualificationview> ApplicantQualificationviews { get; set; }

    public virtual DbSet<ApplicantView> ApplicantViews { get; set; }

    public virtual DbSet<ApplicationFileReqDView> ApplicationFileReqDViews { get; set; }

    public virtual DbSet<ApplicationFileReqLogView> ApplicationFileReqLogViews { get; set; }

    public virtual DbSet<ApplicationFileReqView> ApplicationFileReqViews { get; set; }

    public virtual DbSet<ApplicationLogView> ApplicationLogViews { get; set; }

    public virtual DbSet<ApplicationRequestView> ApplicationRequestViews { get; set; }

    public virtual DbSet<ApplicationThumbView> ApplicationThumbViews { get; set; }

    public virtual DbSet<ApplicationView> ApplicationViews { get; set; }

    public virtual DbSet<AttachmentView> AttachmentViews { get; set; }

    public virtual DbSet<AwaitingPostingAppView> AwaitingPostingAppViews { get; set; }

    public virtual DbSet<AwaitingPostingView> AwaitingPostingViews { get; set; }

    public virtual DbSet<BedsInfo> BedsInfoes { get; set; }

    public virtual DbSet<CadreView> CadreViews { get; set; }

    public virtual DbSet<CovidFacilityView> CovidFacilityViews { get; set; }

    public virtual DbSet<CovidStaffView> CovidStaffViews { get; set; }

    public virtual DbSet<CreatedLog> CreatedLogs { get; set; }

    public virtual DbSet<DDSDetailsView> DDSDetailsViews { get; set; }

    public virtual DbSet<DDSView> DDSViews { get; set; }

    public virtual DbSet<DistrictView> DistrictViews { get; set; }

    public virtual DbSet<DivisionView> DivisionViews { get; set; }

    public virtual DbSet<DoctorsView> DoctorsViews { get; set; }

    public virtual DbSet<EmployeePostingView> EmployeePostingViews { get; set; }

    public virtual DbSet<EmployeesLeaveExpired> EmployeesLeaveExpireds { get; set; }

    public virtual DbSet<EmployeesOnLeave> EmployeesOnLeaves { get; set; }

    public virtual DbSet<Entity_Log_View> Entity_Log_View { get; set; }

    public virtual DbSet<Entity_Modified_Log_View> Entity_Modified_Log_View { get; set; }

    public virtual DbSet<ESR_DSG> ESR_DSG { get; set; }

    public virtual DbSet<ESR_FINAL> ESR_FINAL { get; set; }

    public virtual DbSet<ESRLatestView> ESRLatestViews { get; set; }

    public virtual DbSet<ESRReportView> ESRReportViews { get; set; }

    public virtual DbSet<ESRView> ESRViews { get; set; }

    public virtual DbSet<FileMoveDetailView> FileMoveDetailViews { get; set; }

    public virtual DbSet<FileMoveMasterView> FileMoveMasterViews { get; set; }

    public virtual DbSet<FilesUpdateView> FilesUpdateViews { get; set; }

    public virtual DbSet<GEOLVL_V> GEOLVL_V { get; set; }

    public virtual DbSet<HealthFacilityDetail> HealthFacilityDetails { get; set; }

    public virtual DbSet<HFDetail> HFDetails { get; set; }

    public virtual DbSet<HFList> HFLists { get; set; }

    public virtual DbSet<HFListGeoLocation> HFListGeoLocations { get; set; }

    public virtual DbSet<HFListGI> HFListGIS { get; set; }

    public virtual DbSet<HFListMode> HFListModes { get; set; }

    public virtual DbSet<HFListP> HFListPs { get; set; }

    public virtual DbSet<HFModeView> HFModeViews { get; set; }

    public virtual DbSet<HFOpenedLHRView> HFOpenedLHRViews { get; set; }

    public virtual DbSet<HFOpenedView> HFOpenedViews { get; set; }

    public virtual DbSet<HFRecordView> HFRecordViews { get; set; }

    public virtual DbSet<HFTownView> HFTownViews { get; set; }

    public virtual DbSet<HfTypeList> HfTypeLists { get; set; }

    public virtual DbSet<HFTypeWiseReport> HFTypeWiseReports { get; set; }

    public virtual DbSet<HFTypeWiseRpt> HFTypeWiseRpts { get; set; }

    public virtual DbSet<HFUCMView> HFUCMViews { get; set; }

    public virtual DbSet<HFWardBedsView> HFWardBedsViews { get; set; }

    public virtual DbSet<HisduEmpAttaundaceLog1> HisduEmpAttaundaceLog1 { get; set; }

    public virtual DbSet<HisduEmpDailyAttancucsSummery1> HisduEmpDailyAttancucsSummery1 { get; set; }

    public virtual DbSet<HisduEmpMonthelyLeaveSummery> HisduEmpMonthelyLeaveSummeries { get; set; }

    public virtual DbSet<HisduMonthelyEmpReport1> HisduMonthelyEmpReport1 { get; set; }

    public virtual DbSet<HrApplicationView> HrApplicationViews { get; set; }

    public virtual DbSet<HrAttachedPersonView> HrAttachedPersonViews { get; set; }

    public virtual DbSet<HrDesignationDoc> HrDesignationDocs { get; set; }

    public virtual DbSet<HrDesignationView> HrDesignationViews { get; set; }

    public virtual DbSet<HrHealthWorkerExportView> HrHealthWorkerExportViews { get; set; }

    public virtual DbSet<HrHealthWorkerView> HrHealthWorkerViews { get; set; }

    public virtual DbSet<HrInquiryView> HrInquiryViews { get; set; }

    public virtual DbSet<HrLeaveRecordView> HrLeaveRecordViews { get; set; }

    public virtual DbSet<HrPost_TypeView> HrPost_TypeView { get; set; }

    public virtual DbSet<HrPostingView> HrPostingViews { get; set; }

    public virtual DbSet<HrProfileDetailsView> HrProfileDetailsViews { get; set; }

    public virtual DbSet<HrProfileReq_VIEW> HrProfileReq_VIEW { get; set; }

    public virtual DbSet<HrQualificationView> HrQualificationViews { get; set; }

    public virtual DbSet<HrReviewSubmissionView> HrReviewSubmissionViews { get; set; }

    public virtual DbSet<HrReviewView> HrReviewViews { get; set; }

    public virtual DbSet<HrSeniorityApplicationView> HrSeniorityApplicationViews { get; set; }

    public virtual DbSet<HrSeniorityApplicationView_Fixed> HrSeniorityApplicationView_Fixed { get; set; }

    public virtual DbSet<HrSeniorityDCPharmacistApplicationView> HrSeniorityDCPharmacistApplicationViews { get; set; }

    public virtual DbSet<HrSeniorityDCPharmacistApplicationView_Fixed> HrSeniorityDCPharmacistApplicationView_Fixed { get; set; }

    public virtual DbSet<HrServiceHistoryView> HrServiceHistoryViews { get; set; }

    public virtual DbSet<JobApplicantDocumentView> JobApplicantDocumentViews { get; set; }

    public virtual DbSet<JobApplicantPrefView> JobApplicantPrefViews { get; set; }

    public virtual DbSet<JobApplicantsView> JobApplicantsViews { get; set; }

    public virtual DbSet<JobApplicantView> JobApplicantViews { get; set; }

    public virtual DbSet<JobApplicationPreferenceView> JobApplicationPreferenceViews { get; set; }

    public virtual DbSet<JobApplicationsView> JobApplicationsViews { get; set; }

    public virtual DbSet<JobApplicationView> JobApplicationViews { get; set; }

    public virtual DbSet<JobBatchesView> JobBatchesViews { get; set; }

    public virtual DbSet<JobDocumentRequiredView> JobDocumentRequiredViews { get; set; }

    public virtual DbSet<JobHFView> JobHFViews { get; set; }

    public virtual DbSet<JobsView> JobsViews { get; set; }

    public virtual DbSet<JobView> JobViews { get; set; }

    public virtual DbSet<LawCallsListOfficerView> LawCallsListOfficerViews { get; set; }

    public virtual DbSet<LawCallsListView> LawCallsListViews { get; set; }

    public virtual DbSet<LawWingReport> LawWingReports { get; set; }

    public virtual DbSet<LeaveApplication_View> LeaveApplication_View { get; set; }

    public virtual DbSet<LeaveOrderView> LeaveOrderViews { get; set; }

    public virtual DbSet<LeavesExpired> LeavesExpireds { get; set; }

    public virtual DbSet<MeritDiplomaCandidateView> MeritDiplomaCandidateViews { get; set; }

    public virtual DbSet<MeritPGView> MeritPGViews { get; set; }

    public virtual DbSet<MeritPostingView> MeritPostingViews { get; set; }

    public virtual DbSet<MeritsView> MeritsViews { get; set; }

    public virtual DbSet<MoPrefferedHealthFacilityView> MoPrefferedHealthFacilityViews { get; set; }

    public virtual DbSet<MWRouteDetailView> MWRouteDetailViews { get; set; }

    public virtual DbSet<MWRouteView> MWRouteViews { get; set; }

    public virtual DbSet<OrderAllView> OrderAllViews { get; set; }

    public virtual DbSet<OrderReportOverallView> OrderReportOverallViews { get; set; }

    public virtual DbSet<OrderReportSignedByAll> OrderReportSignedByAlls { get; set; }

    public virtual DbSet<PandSOfficerView> PandSOfficerViews { get; set; }

    public virtual DbSet<PermotionReport> PermotionReports { get; set; }

    public virtual DbSet<PerView> PerViews { get; set; }

    public virtual DbSet<PerWrkngPprGrdsCnt> PerWrkngPprGrdsCnts { get; set; }

    public virtual DbSet<PHFMCOrderView> PHFMCOrderViews { get; set; }

    public virtual DbSet<Pivot_Dsg_Specific> Pivot_Dsg_Specific { get; set; }

    public virtual DbSet<ProfileAttachmentsView> ProfileAttachmentsViews { get; set; }

    public virtual DbSet<ProfileCompactView> ProfileCompactViews { get; set; }

    public virtual DbSet<ProfileDetailsSeniorityView> ProfileDetailsSeniorityViews { get; set; }

    public virtual DbSet<ProfileDetailsView> ProfileDetailsViews { get; set; }

    public virtual DbSet<ProfileDetailsViewActive> ProfileDetailsViewActives { get; set; }

    public virtual DbSet<ProfileListView> ProfileListViews { get; set; }

    public virtual DbSet<ProfileRemarksView> ProfileRemarksViews { get; set; }

    public virtual DbSet<ProfileSeniorityView> ProfileSeniorityViews { get; set; }

    public virtual DbSet<ProfileThumbView> ProfileThumbViews { get; set; }

    public virtual DbSet<Program_Project_Wise_HealthFacility> Program_Project_Wise_HealthFacility { get; set; }

    public virtual DbSet<Project_ProgramView> Project_ProgramView { get; set; }

    public virtual DbSet<PromoJobApplicationVM> PromoJobApplicationVMs { get; set; }

    public virtual DbSet<PromotedCandidateView> PromotedCandidateViews { get; set; }

    public virtual DbSet<PromotedCandidateView2> PromotedCandidateView2 { get; set; }

    public virtual DbSet<PromotionApplyView> PromotionApplyViews { get; set; }

    public virtual DbSet<PromotionEsrView> PromotionEsrViews { get; set; }

    public virtual DbSet<ServiceTempView> ServiceTempViews { get; set; }

    public virtual DbSet<TehsilView> TehsilViews { get; set; }

    public virtual DbSet<TransferApplication_View> TransferApplication_View { get; set; }

    public virtual DbSet<UserContactView> UserContactViews { get; set; }

    public virtual DbSet<UserCreatedLog> UserCreatedLogs { get; set; }

    public virtual DbSet<UserCreatedVPProfileLog> UserCreatedVPProfileLogs { get; set; }

    public virtual DbSet<UserLogView> UserLogViews { get; set; }

    public virtual DbSet<UsersUpdated> UsersUpdateds { get; set; }

    public virtual DbSet<UsersView> UsersViews { get; set; }

    public virtual DbSet<UsersViewNew> UsersViewNews { get; set; }

    public virtual DbSet<View_absent> View_absent { get; set; }

    public virtual DbSet<View_Absentees> View_Absentees { get; set; }

    public virtual DbSet<View_all_activity_log> View_all_activity_log { get; set; }

    public virtual DbSet<View_AttendanceCalc> View_AttendanceCalc { get; set; }

    public virtual DbSet<View_CurrentBalance> View_CurrentBalance { get; set; }

    public virtual DbSet<View_Dashb_Roster> View_Dashb_Roster { get; set; }

    public virtual DbSet<View_dpt_month_attendance> View_dpt_month_attendance { get; set; }

    public virtual DbSet<View_HF_test> View_HF_test { get; set; }

    public virtual DbSet<View_HISDUProfileDetailsView> View_HISDUProfileDetailsView { get; set; }

    public virtual DbSet<View_LeaveRecords> View_LeaveRecords { get; set; }

    public virtual DbSet<View_Log> View_Log { get; set; }

    public virtual DbSet<View_MonthlyAttendance1> View_MonthlyAttendance1 { get; set; }

    public virtual DbSet<View_MonthlyBalance> View_MonthlyBalance { get; set; }

    public virtual DbSet<View_MonthlyBalance_Rpt> View_MonthlyBalance_Rpt { get; set; }

    public virtual DbSet<View_New> View_New { get; set; }

    public virtual DbSet<View_NewAT> View_NewAT { get; set; }

    public virtual DbSet<View_Profilethumbview_change> View_Profilethumbview_change { get; set; }

    public virtual DbSet<View_ProjectsDetail> View_ProjectsDetail { get; set; }

    public virtual DbSet<View_RosterDetail> View_RosterDetail { get; set; }

    public virtual DbSet<View_RosterEmployees> View_RosterEmployees { get; set; }

    public virtual DbSet<View_Rptattandance> View_Rptattandance { get; set; }

    public virtual DbSet<View_RptDailyAttendance> View_RptDailyAttendance { get; set; }

    public virtual DbSet<View_TaskDetail> View_TaskDetail { get; set; }

    public virtual DbSet<View_TeamDetails> View_TeamDetails { get; set; }

    public virtual DbSet<View_TeamEmployees> View_TeamEmployees { get; set; }

    public virtual DbSet<View_TeamMembers> View_TeamMembers { get; set; }

    public virtual DbSet<View_TeamProjects> View_TeamProjects { get; set; }

    public virtual DbSet<View_TotalLeaves> View_TotalLeaves { get; set; }

    public virtual DbSet<ViewESRSummaryTotal> ViewESRSummaryTotals { get; set; }

    public virtual DbSet<ViewHFService> ViewHFServices { get; set; }

    public virtual DbSet<ViewMeritPreference> ViewMeritPreferences { get; set; }

    public virtual DbSet<ViewMeritPreferencesFinal> ViewMeritPreferencesFinals { get; set; }

    public virtual DbSet<ViewMeritsVp> ViewMeritsVps { get; set; }

    public virtual DbSet<ViewProfilePhoto> ViewProfilePhotoes { get; set; }

    public virtual DbSet<VpDetailView> VpDetailViews { get; set; }

    public virtual DbSet<VpDProfileView> VpDProfileViews { get; set; }

    public virtual DbSet<VpDView> VpDViews { get; set; }

    public virtual DbSet<VpGeoView> VpGeoViews { get; set; }

    public virtual DbSet<VPHolderView> VPHolderViews { get; set; }

    public virtual DbSet<VpMasterProfileView> VpMasterProfileViews { get; set; }

    public virtual DbSet<VpMastProfileView> VpMastProfileViews { get; set; }

    public virtual DbSet<VpMDView> VpMDViews { get; set; }

    public virtual DbSet<VpMeritPostingView> VpMeritPostingViews { get; set; }

    public virtual DbSet<VpMeritPreferenceView> VpMeritPreferenceViews { get; set; }

    public virtual DbSet<VpMProfileView> VpMProfileViews { get; set; }

    public virtual DbSet<VpMView> VpMViews { get; set; }

    public virtual DbSet<VPProfileView> VPProfileViews { get; set; }

    public virtual DbSet<HFPicView> HFPicViews { get; set; }

    public virtual DbSet<UniqueAdhocHealthFacility> UniqueAdhocHealthFacilities { get; set; }

    public virtual DbSet<LoggedInLog> LoggedInLogs { get; set; }

    public virtual DbSet<LoggedProfileInLog> LoggedProfileInLogs { get; set; }

    public virtual DbSet<DailyWagerBankDetail> DailyWagerBankDetails { get; set; }

    public virtual DbSet<DailyWagerContractDetail> DailyWagerContractDetails { get; set; }

    public virtual DbSet<DailyWagesProfile> DailyWagesProfiles { get; set; }

    public virtual DbSet<hc_hfbankdetails> hc_hfbankdetails { get; set; }

    public virtual DbSet<BankDetail> BankDetails { get; set; }

    public virtual DbSet<tEMPtABLE> tEMPtABLEs { get; set; }

    public virtual DbSet<DailyWagerDetailView> DailyWagerDetailViews { get; set; }

    public virtual DbSet<Coordinate> Coordinates { get; set; }

    public virtual DbSet<UcData> UcDatas { get; set; }

    public virtual DbSet<GetCoordinate> GetCoordinates { get; set; }

    public virtual DbSet<DailyWagerCategory> DailyWagerCategories { get; set; }

    public virtual DbSet<DailyWagerDesignation> DailyWagerDesignations { get; set; }

    public virtual DbSet<UCWiseData> UCWiseDatas { get; set; }


    public virtual ObjectResult<AdhocApplicantsSummary_Result> AdhocApplicantsSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdhocApplicantsSummary_Result>("AdhocApplicantsSummary");
    }


    public virtual ObjectResult<AwaitingPostingSummary_Result> AwaitingPostingSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AwaitingPostingSummary_Result>("AwaitingPostingSummary");
    }


    public virtual ObjectResult<DSRPendancy_Result> DSRPendancy(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate, string type, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DSRPendancy_Result>("DSRPendancy", fromParameter, toParameter, fixDateParameter, typeParameter, programParameter);
    }


    public virtual ObjectResult<EmpLeaveExpiredSummary_Result> EmpLeaveExpiredSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpLeaveExpiredSummary_Result>("EmpLeaveExpiredSummary");
    }


    public virtual ObjectResult<EmpLeaveExpiredSummaryDistrict_Result> EmpLeaveExpiredSummaryDistrict(string hfmisCode)
    {

        var hfmisCodeParameter = hfmisCode != null ?
            new ObjectParameter("hfmisCode", hfmisCode) :
            new ObjectParameter("hfmisCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpLeaveExpiredSummaryDistrict_Result>("EmpLeaveExpiredSummaryDistrict", hfmisCodeParameter);
    }


    public virtual ObjectResult<EmpOnLeaveSummary_Result> EmpOnLeaveSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpOnLeaveSummary_Result>("EmpOnLeaveSummary");
    }


    public virtual ObjectResult<EmpOnLeaveSummaryDistrict_Result> EmpOnLeaveSummaryDistrict(string hfmisCode)
    {

        var hfmisCodeParameter = hfmisCode != null ?
            new ObjectParameter("hfmisCode", hfmisCode) :
            new ObjectParameter("hfmisCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpOnLeaveSummaryDistrict_Result>("EmpOnLeaveSummaryDistrict", hfmisCodeParameter);
    }


    public virtual ObjectResult<fts_AppTypeSO_Result> fts_AppTypeSO(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sectionId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var sectionIdParameter = sectionId.HasValue ?
            new ObjectParameter("sectionId", sectionId) :
            new ObjectParameter("sectionId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fts_AppTypeSO_Result>("fts_AppTypeSO", fromParameter, toParameter, sectionIdParameter);
    }


    public virtual ObjectResult<fts12_Result> fts12(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sectionId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var sectionIdParameter = sectionId.HasValue ?
            new ObjectParameter("sectionId", sectionId) :
            new ObjectParameter("sectionId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fts12_Result>("fts12", fromParameter, toParameter, sectionIdParameter);
    }


    public virtual ObjectResult<Nullable<int>> PRC_DDSSCAND()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRC_DDSSCAND");
    }


    public virtual int Proc_PrescriptionsByCnic(string cnic)
    {

        var cnicParameter = cnic != null ?
            new ObjectParameter("Cnic", cnic) :
            new ObjectParameter("Cnic", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_PrescriptionsByCnic", cnicParameter);
    }


    public virtual ObjectResult<Profile_SP_Result> Profile_SP()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profile_SP_Result>("Profile_SP");
    }


    public virtual ObjectResult<PUCDashboard_Result> PUCDashboard(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUCDashboard_Result>("PUCDashboard", fromParameter, toParameter, fixDateParameter);
    }


    public virtual int ResetAdhoc(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetAdhoc", idParameter);
    }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual ObjectResult<SP_APPSSUM_WITH_DATE_Result> SP_APPSSUM_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_APPSSUM_WITH_DATE_Result>("SP_APPSSUM_WITH_DATE", fromParameter, toParameter);
    }


    public virtual ObjectResult<SP_CP_OFFICE_WISE_WITH_DATE_Result> SP_CP_OFFICE_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string userId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var userIdParameter = userId != null ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CP_OFFICE_WISE_WITH_DATE_Result>("SP_CP_OFFICE_WISE_WITH_DATE", fromParameter, toParameter, userIdParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual ObjectResult<SP_DEPT_PENDENCY_WITH_DATE_Result> SP_DEPT_PENDENCY_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEPT_PENDENCY_WITH_DATE_Result>("SP_DEPT_PENDENCY_WITH_DATE", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_DEPT_PENDENCY_WITH_DATE_TYPE_Result> SP_DEPT_PENDENCY_WITH_DATE_TYPE(Nullable<int> typeId, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var typeIdParameter = typeId.HasValue ?
            new ObjectParameter("typeId", typeId) :
            new ObjectParameter("typeId", typeof(int));


        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEPT_PENDENCY_WITH_DATE_TYPE_Result>("SP_DEPT_PENDENCY_WITH_DATE_TYPE", typeIdParameter, fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_DEPT_WITH_DATE_Result> SP_DEPT_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEPT_WITH_DATE_Result>("SP_DEPT_WITH_DATE", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_DEPT_WITH_DATE_TYPE_Result> SP_DEPT_WITH_DATE_TYPE(Nullable<int> typeId, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var typeIdParameter = typeId.HasValue ?
            new ObjectParameter("typeId", typeId) :
            new ObjectParameter("typeId", typeof(int));


        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEPT_WITH_DATE_TYPE_Result>("SP_DEPT_WITH_DATE_TYPE", typeIdParameter, fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_DEPT_WITH_DATE2_Result> SP_DEPT_WITH_DATE2(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEPT_WITH_DATE2_Result>("SP_DEPT_WITH_DATE2", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_DIARY_OFFICE_WISE_WITH_DATE_Result> SP_DIARY_OFFICE_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string userId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var userIdParameter = userId != null ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DIARY_OFFICE_WISE_WITH_DATE_Result>("SP_DIARY_OFFICE_WISE_WITH_DATE", fromParameter, toParameter, userIdParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<SP_FCTYP_WISE_WITH_DATE_Result> SP_FCTYP_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string userId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var userIdParameter = userId != null ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FCTYP_WISE_WITH_DATE_Result>("SP_FCTYP_WISE_WITH_DATE", fromParameter, toParameter, userIdParameter);
    }


    public virtual ObjectResult<SP_FCTYP_WISE_WITH_DATE_2_Result> SP_FCTYP_WISE_WITH_DATE_2(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string userId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var userIdParameter = userId != null ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FCTYP_WISE_WITH_DATE_2_Result>("SP_FCTYP_WISE_WITH_DATE_2", fromParameter, toParameter, userIdParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<SP_LAWING_OFFICE_WISE_WITH_DATE_Result> SP_LAWING_OFFICE_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string userId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var userIdParameter = userId != null ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LAWING_OFFICE_WISE_WITH_DATE_Result>("SP_LAWING_OFFICE_WISE_WITH_DATE", fromParameter, toParameter, userIdParameter);
    }


    public virtual ObjectResult<SP_OFC_WISE_WITH_DATE_Result> SP_OFC_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OFC_WISE_WITH_DATE_Result>("SP_OFC_WISE_WITH_DATE", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_Pagination_Employee_Profile_Result> SP_Pagination_Employee_Profile(Nullable<int> pageNumber, Nullable<int> pageSize)
    {

        var pageNumberParameter = pageNumber.HasValue ?
            new ObjectParameter("PageNumber", pageNumber) :
            new ObjectParameter("PageNumber", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("PageSize", pageSize) :
            new ObjectParameter("PageSize", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Pagination_Employee_Profile_Result>("SP_Pagination_Employee_Profile", pageNumberParameter, pageSizeParameter);
    }


    public virtual ObjectResult<SP_PLTYP_WISE_WITH_DATE_Result> SP_PLTYP_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PLTYP_WISE_WITH_DATE_Result>("SP_PLTYP_WISE_WITH_DATE", fromParameter, toParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual ObjectResult<SP_RI_OFFICE_WISE_WITH_DATE_Result> SP_RI_OFFICE_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string userId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var userIdParameter = userId != null ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RI_OFFICE_WISE_WITH_DATE_Result>("SP_RI_OFFICE_WISE_WITH_DATE", fromParameter, toParameter, userIdParameter);
    }


    public virtual int sp_RosterDetail(Nullable<int> subDept_Id)
    {

        var subDept_IdParameter = subDept_Id.HasValue ?
            new ObjectParameter("subDept_Id", subDept_Id) :
            new ObjectParameter("subDept_Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RosterDetail", subDept_IdParameter);
    }


    public virtual ObjectResult<SP_TOT_APPSSUM_WITH_DATE_Result> SP_TOT_APPSSUM_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TOT_APPSSUM_WITH_DATE_Result>("SP_TOT_APPSSUM_WITH_DATE", fromParameter, toParameter);
    }


    public virtual ObjectResult<SP_TOT_FCTYP_WISE_WITH_DATE_Result> SP_TOT_FCTYP_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TOT_FCTYP_WISE_WITH_DATE_Result>("SP_TOT_FCTYP_WISE_WITH_DATE", fromParameter, toParameter);
    }


    public virtual ObjectResult<SP_TOT_OFC_WISE_WITH_DATE_Result> SP_TOT_OFC_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TOT_OFC_WISE_WITH_DATE_Result>("SP_TOT_OFC_WISE_WITH_DATE", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<SP_TOT_PLTYP_WISE_WITH_DATE_Result> SP_TOT_PLTYP_WISE_WITH_DATE(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TOT_PLTYP_WISE_WITH_DATE_Result>("SP_TOT_PLTYP_WISE_WITH_DATE", fromParameter, toParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual ObjectResult<spCheckProfileId_Result> spCheckProfileId(Nullable<int> profileId)
    {

        var profileIdParameter = profileId.HasValue ?
            new ObjectParameter("profileId", profileId) :
            new ObjectParameter("profileId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckProfileId_Result>("spCheckProfileId", profileIdParameter);
    }


    public virtual int spDeleteDuplication(Nullable<int> profileIdold, Nullable<int> profileIdNew)
    {

        var profileIdoldParameter = profileIdold.HasValue ?
            new ObjectParameter("profileIdold", profileIdold) :
            new ObjectParameter("profileIdold", typeof(int));


        var profileIdNewParameter = profileIdNew.HasValue ?
            new ObjectParameter("profileIdNew", profileIdNew) :
            new ObjectParameter("profileIdNew", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteDuplication", profileIdoldParameter, profileIdNewParameter);
    }


    public virtual int spDeleteProfile(Nullable<int> profileId)
    {

        var profileIdParameter = profileId.HasValue ?
            new ObjectParameter("ProfileId", profileId) :
            new ObjectParameter("ProfileId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteProfile", profileIdParameter);
    }


    public virtual ObjectResult<spGetStafffDetail_Result> spGetStafffDetail(string hfCode)
    {

        var hfCodeParameter = hfCode != null ?
            new ObjectParameter("hfCode", hfCode) :
            new ObjectParameter("hfCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStafffDetail_Result>("spGetStafffDetail", hfCodeParameter);
    }


    public virtual int TEST(string tB, string c1, string c2, string v1)
    {

        var tBParameter = tB != null ?
            new ObjectParameter("TB", tB) :
            new ObjectParameter("TB", typeof(string));


        var c1Parameter = c1 != null ?
            new ObjectParameter("C1", c1) :
            new ObjectParameter("C1", typeof(string));


        var c2Parameter = c2 != null ?
            new ObjectParameter("C2", c2) :
            new ObjectParameter("C2", typeof(string));


        var v1Parameter = v1 != null ?
            new ObjectParameter("V1", v1) :
            new ObjectParameter("V1", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TEST", tBParameter, c1Parameter, c2Parameter, v1Parameter);
    }


    public virtual ObjectResult<usp_MeritPosting_Result> usp_MeritPosting()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MeritPosting_Result>("usp_MeritPosting");
    }


    public virtual int uspAdhocAllotedDistrictPriority(Nullable<int> designationIds, Nullable<int> phases, Nullable<int> batchNos)
    {

        var designationIdsParameter = designationIds.HasValue ?
            new ObjectParameter("DesignationIds", designationIds) :
            new ObjectParameter("DesignationIds", typeof(int));


        var phasesParameter = phases.HasValue ?
            new ObjectParameter("Phases", phases) :
            new ObjectParameter("Phases", typeof(int));


        var batchNosParameter = batchNos.HasValue ?
            new ObjectParameter("BatchNos", batchNos) :
            new ObjectParameter("BatchNos", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAdhocAllotedDistrictPriority", designationIdsParameter, phasesParameter, batchNosParameter);
    }


    public virtual int uspAdhocAllotedDistrictPriorityPreferences(Nullable<int> designationid, Nullable<int> phase, Nullable<int> batchno)
    {

        var designationidParameter = designationid.HasValue ?
            new ObjectParameter("designationid", designationid) :
            new ObjectParameter("designationid", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("phase", phase) :
            new ObjectParameter("phase", typeof(int));


        var batchnoParameter = batchno.HasValue ?
            new ObjectParameter("batchno", batchno) :
            new ObjectParameter("batchno", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAdhocAllotedDistrictPriorityPreferences", designationidParameter, phaseParameter, batchnoParameter);
    }


    public virtual ObjectResult<uspAdhocApplicationCountDistrictWise_Result> uspAdhocApplicationCountDistrictWise(string city)
    {

        var cityParameter = city != null ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocApplicationCountDistrictWise_Result>("uspAdhocApplicationCountDistrictWise", cityParameter);
    }


    public virtual ObjectResult<uspAdhocApplicationGrievanceCountSummary_Result> uspAdhocApplicationGrievanceCountSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocApplicationGrievanceCountSummary_Result>("uspAdhocApplicationGrievanceCountSummary");
    }


    public virtual ObjectResult<uspAdhocApplicationsDistDesiSummary_Result> uspAdhocApplicationsDistDesiSummary(string city)
    {

        var cityParameter = city != null ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocApplicationsDistDesiSummary_Result>("uspAdhocApplicationsDistDesiSummary", cityParameter);
    }


    public virtual ObjectResult<uspAdhocCounts_Result> uspAdhocCounts()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocCounts_Result>("uspAdhocCounts");
    }


    public virtual int uspAdhocDistrictAllottedMOWMO(Nullable<int> designationId, Nullable<int> phase, Nullable<int> batchNo)
    {

        var designationIdParameter = designationId.HasValue ?
            new ObjectParameter("DesignationId", designationId) :
            new ObjectParameter("DesignationId", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("Phase", phase) :
            new ObjectParameter("Phase", typeof(int));


        var batchNoParameter = batchNo.HasValue ?
            new ObjectParameter("BatchNo", batchNo) :
            new ObjectParameter("BatchNo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAdhocDistrictAllottedMOWMO", designationIdParameter, phaseParameter, batchNoParameter);
    }


    public virtual int uspAdhocDistrictOpenedBHUVacancy(Nullable<int> designation_Id, Nullable<int> phase, Nullable<int> batchNo)
    {

        var designation_IdParameter = designation_Id.HasValue ?
            new ObjectParameter("Designation_Id", designation_Id) :
            new ObjectParameter("Designation_Id", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("phase", phase) :
            new ObjectParameter("phase", typeof(int));


        var batchNoParameter = batchNo.HasValue ?
            new ObjectParameter("BatchNo", batchNo) :
            new ObjectParameter("BatchNo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAdhocDistrictOpenedBHUVacancy", designation_IdParameter, phaseParameter, batchNoParameter);
    }


    public virtual ObjectResult<uspAdhocGreivanceScrutinySummay_Result> uspAdhocGreivanceScrutinySummay()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocGreivanceScrutinySummay_Result>("uspAdhocGreivanceScrutinySummay");
    }


    public virtual int uspAdhocHFOpenedVacancy(Nullable<int> designation_Id, Nullable<int> phase, Nullable<int> batchNo)
    {

        var designation_IdParameter = designation_Id.HasValue ?
            new ObjectParameter("Designation_Id", designation_Id) :
            new ObjectParameter("Designation_Id", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("phase", phase) :
            new ObjectParameter("phase", typeof(int));


        var batchNoParameter = batchNo.HasValue ?
            new ObjectParameter("BatchNo", batchNo) :
            new ObjectParameter("BatchNo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAdhocHFOpenedVacancy", designation_IdParameter, phaseParameter, batchNoParameter);
    }


    public virtual ObjectResult<uspAdhocPendencyDistrictWiseSummary_Result> uspAdhocPendencyDistrictWiseSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocPendencyDistrictWiseSummary_Result>("uspAdhocPendencyDistrictWiseSummary");
    }


    public virtual int uspAdhocPostingDeleteQueries(Nullable<int> designationId, Nullable<int> phase, Nullable<int> batch_No, Nullable<bool> deleteflag)
    {

        var designationIdParameter = designationId.HasValue ?
            new ObjectParameter("designationId", designationId) :
            new ObjectParameter("designationId", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("phase", phase) :
            new ObjectParameter("phase", typeof(int));


        var batch_NoParameter = batch_No.HasValue ?
            new ObjectParameter("batch_No", batch_No) :
            new ObjectParameter("batch_No", typeof(int));


        var deleteflagParameter = deleteflag.HasValue ?
            new ObjectParameter("deleteflag", deleteflag) :
            new ObjectParameter("deleteflag", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAdhocPostingDeleteQueries", designationIdParameter, phaseParameter, batch_NoParameter, deleteflagParameter);
    }


    public virtual ObjectResult<uspAdhocTotalApplicationsStatusWiseSummary_Result> uspAdhocTotalApplicationsStatusWiseSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAdhocTotalApplicationsStatusWiseSummary_Result>("uspAdhocTotalApplicationsStatusWiseSummary");
    }


    public virtual int uspApplicationCharts(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspApplicationCharts", fromParameter, toParameter);
    }


    public virtual ObjectResult<uspApplicationTypeWiseOfficer_Result> uspApplicationTypeWiseOfficer(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sectionId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var sectionIdParameter = sectionId.HasValue ?
            new ObjectParameter("sectionId", sectionId) :
            new ObjectParameter("sectionId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspApplicationTypeWiseOfficer_Result>("uspApplicationTypeWiseOfficer", fromParameter, toParameter, sectionIdParameter);
    }


    public virtual ObjectResult<uspApplicationTypeWiseOfficer_2_Result> uspApplicationTypeWiseOfficer_2(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sectionId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var sectionIdParameter = sectionId.HasValue ?
            new ObjectParameter("sectionId", sectionId) :
            new ObjectParameter("sectionId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspApplicationTypeWiseOfficer_2_Result>("uspApplicationTypeWiseOfficer_2", fromParameter, toParameter, sectionIdParameter);
    }


    public virtual ObjectResult<uspApplicationTypeWiseOfficer_3_Result> uspApplicationTypeWiseOfficer_3(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sectionId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var sectionIdParameter = sectionId.HasValue ?
            new ObjectParameter("sectionId", sectionId) :
            new ObjectParameter("sectionId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspApplicationTypeWiseOfficer_3_Result>("uspApplicationTypeWiseOfficer_3", fromParameter, toParameter, sectionIdParameter);
    }


    public virtual ObjectResult<uspApplicationTypeWiseOfficer_4_Result> uspApplicationTypeWiseOfficer_4(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sectionId, Nullable<int> sourceId)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var sectionIdParameter = sectionId.HasValue ?
            new ObjectParameter("sectionId", sectionId) :
            new ObjectParameter("sectionId", typeof(int));


        var sourceIdParameter = sourceId.HasValue ?
            new ObjectParameter("sourceId", sourceId) :
            new ObjectParameter("sourceId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspApplicationTypeWiseOfficer_4_Result>("uspApplicationTypeWiseOfficer_4", fromParameter, toParameter, sectionIdParameter, sourceIdParameter);
    }


    public virtual ObjectResult<uspCrrPendancy_Result> uspCrrPendancy(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspCrrPendancy_Result>("uspCrrPendancy", fromParameter, toParameter, fixDateParameter);
    }


    public virtual ObjectResult<uspDayWiseTotalApplications_Result> uspDayWiseTotalApplications()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspDayWiseTotalApplications_Result>("uspDayWiseTotalApplications");
    }


    public virtual int uspDeleteAdhocQueries(Nullable<int> designation_Id, Nullable<int> phase, Nullable<int> batch_No)
    {

        var designation_IdParameter = designation_Id.HasValue ?
            new ObjectParameter("Designation_Id", designation_Id) :
            new ObjectParameter("Designation_Id", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("phase", phase) :
            new ObjectParameter("phase", typeof(int));


        var batch_NoParameter = batch_No.HasValue ?
            new ObjectParameter("Batch_No", batch_No) :
            new ObjectParameter("Batch_No", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteAdhocQueries", designation_IdParameter, phaseParameter, batch_NoParameter);
    }


    public virtual ObjectResult<uspDesignationWiseApplicationsSummary_Result> uspDesignationWiseApplicationsSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspDesignationWiseApplicationsSummary_Result>("uspDesignationWiseApplicationsSummary");
    }


    public virtual ObjectResult<uspDistrictWiseApplicationPreferencesSummary_Result> uspDistrictWiseApplicationPreferencesSummary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspDistrictWiseApplicationPreferencesSummary_Result>("uspDistrictWiseApplicationPreferencesSummary");
    }


    public virtual ObjectResult<uspETransferAppVp_Result> uspETransferAppVp()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspETransferAppVp_Result>("uspETransferAppVp");
    }


    public virtual ObjectResult<uspETransferVp_Result> uspETransferVp()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspETransferVp_Result>("uspETransferVp");
    }


    public virtual ObjectResult<uspFileRecSectionWise_Result> uspFileRecSectionWise()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspFileRecSectionWise_Result>("uspFileRecSectionWise");
    }


    public virtual ObjectResult<uspGetCitezenComplaints_Result> uspGetCitezenComplaints(Nullable<int> appSourceId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
    {

        var appSourceIdParameter = appSourceId.HasValue ?
            new ObjectParameter("appSourceId", appSourceId) :
            new ObjectParameter("appSourceId", typeof(int));


        var startParameter = start.HasValue ?
            new ObjectParameter("start", start) :
            new ObjectParameter("start", typeof(System.DateTime));


        var endParameter = end.HasValue ?
            new ObjectParameter("end", end) :
            new ObjectParameter("end", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCitezenComplaints_Result>("uspGetCitezenComplaints", appSourceIdParameter, startParameter, endParameter);
    }


    public virtual ObjectResult<uspGetDiary_Result> uspGetDiary(Nullable<int> appSourceId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
    {

        var appSourceIdParameter = appSourceId.HasValue ?
            new ObjectParameter("appSourceId", appSourceId) :
            new ObjectParameter("appSourceId", typeof(int));


        var startParameter = start.HasValue ?
            new ObjectParameter("start", start) :
            new ObjectParameter("start", typeof(System.DateTime));


        var endParameter = end.HasValue ?
            new ObjectParameter("end", end) :
            new ObjectParameter("end", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDiary_Result>("uspGetDiary", appSourceIdParameter, startParameter, endParameter);
    }


    public virtual ObjectResult<uspGetHFApps_Result> uspGetHFApps(Nullable<int> hfId)
    {

        var hfIdParameter = hfId.HasValue ?
            new ObjectParameter("HfId", hfId) :
            new ObjectParameter("HfId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetHFApps_Result>("uspGetHFApps", hfIdParameter);
    }


    public virtual ObjectResult<uspJobApplicantPreferences_Result> uspJobApplicantPreferences(Nullable<int> jobId, string jobBatch)
    {

        var jobIdParameter = jobId.HasValue ?
            new ObjectParameter("jobId", jobId) :
            new ObjectParameter("jobId", typeof(int));


        var jobBatchParameter = jobBatch != null ?
            new ObjectParameter("jobBatch", jobBatch) :
            new ObjectParameter("jobBatch", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspJobApplicantPreferences_Result>("uspJobApplicantPreferences", jobIdParameter, jobBatchParameter);
    }


    public virtual ObjectResult<uspMeritOrders_Result> uspMeritOrders(Nullable<int> activeDsgId)
    {

        var activeDsgIdParameter = activeDsgId.HasValue ?
            new ObjectParameter("activeDsgId", activeDsgId) :
            new ObjectParameter("activeDsgId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspMeritOrders_Result>("uspMeritOrders", activeDsgIdParameter);
    }


    public virtual ObjectResult<uspOfficerDiary_Result> uspOfficerDiary(Nullable<int> officerId)
    {

        var officerIdParameter = officerId.HasValue ?
            new ObjectParameter("officerId", officerId) :
            new ObjectParameter("officerId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspOfficerDiary_Result>("uspOfficerDiary", officerIdParameter);
    }


    public virtual ObjectResult<uspOfficerDiary2_Result> uspOfficerDiary2(Nullable<int> officerId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
    {

        var officerIdParameter = officerId.HasValue ?
            new ObjectParameter("officerId", officerId) :
            new ObjectParameter("officerId", typeof(int));


        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspOfficerDiary2_Result>("uspOfficerDiary2", officerIdParameter, fromParameter, toParameter);
    }


    public virtual ObjectResult<uspPendancy3_Result> uspPendancy3(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate, string type, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPendancy3_Result>("uspPendancy3", fromParameter, toParameter, fixDateParameter, typeParameter, programParameter);
    }


    public virtual ObjectResult<uspPendancy4_Result> uspPendancy4(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate, string type, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPendancy4_Result>("uspPendancy4", fromParameter, toParameter, fixDateParameter, typeParameter, programParameter);
    }


    public virtual ObjectResult<uspPendancy5_Result> uspPendancy5(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate, string type, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPendancy5_Result>("uspPendancy5", fromParameter, toParameter, fixDateParameter, typeParameter, programParameter);
    }


    public virtual ObjectResult<uspPendancyDistrictWise_Result> uspPendancyDistrictWise(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> fixDate, string type, string program, string districtCode)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var fixDateParameter = fixDate.HasValue ?
            new ObjectParameter("fixDate", fixDate) :
            new ObjectParameter("fixDate", typeof(System.DateTime));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        var districtCodeParameter = districtCode != null ?
            new ObjectParameter("districtCode", districtCode) :
            new ObjectParameter("districtCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPendancyDistrictWise_Result>("uspPendancyDistrictWise", fromParameter, toParameter, fixDateParameter, typeParameter, programParameter, districtCodeParameter);
    }


    public virtual ObjectResult<uspPensionCases_Result> uspPensionCases(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPensionCases_Result>("uspPensionCases", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<uspSeniority_Result> uspSeniority()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSeniority_Result>("uspSeniority");
    }


    public virtual int uspUpdateAdhocDistrictAndMeritChanging(Nullable<int> designation_Id, Nullable<int> phase, Nullable<int> batch_No)
    {

        var designation_IdParameter = designation_Id.HasValue ?
            new ObjectParameter("Designation_Id", designation_Id) :
            new ObjectParameter("Designation_Id", typeof(int));


        var phaseParameter = phase.HasValue ?
            new ObjectParameter("phase", phase) :
            new ObjectParameter("phase", typeof(int));


        var batch_NoParameter = batch_No.HasValue ?
            new ObjectParameter("Batch_No", batch_No) :
            new ObjectParameter("Batch_No", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateAdhocDistrictAndMeritChanging", designation_IdParameter, phaseParameter, batch_NoParameter);
    }


    public virtual ObjectResult<VPQuota_Result> VPQuota()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VPQuota_Result>("VPQuota");
    }


    public virtual ObjectResult<VPQuotaDesignation_Result> VPQuotaDesignation()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VPQuotaDesignation_Result>("VPQuotaDesignation");
    }


    public virtual ObjectResult<VPQuotaDistrict_Result> VPQuotaDistrict()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VPQuotaDistrict_Result>("VPQuotaDistrict");
    }


    public virtual ObjectResult<VPQuotaDistrictDesignation_Result> VPQuotaDistrictDesignation()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VPQuotaDistrictDesignation_Result>("VPQuotaDistrictDesignation");
    }


    public virtual ObjectResult<SP_DEPT_WITH_DATE_PROGRAM_Result> SP_DEPT_WITH_DATE_PROGRAM(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string program)
    {

        var fromParameter = from.HasValue ?
            new ObjectParameter("from", from) :
            new ObjectParameter("from", typeof(System.DateTime));


        var toParameter = to.HasValue ?
            new ObjectParameter("to", to) :
            new ObjectParameter("to", typeof(System.DateTime));


        var programParameter = program != null ?
            new ObjectParameter("program", program) :
            new ObjectParameter("program", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEPT_WITH_DATE_PROGRAM_Result>("SP_DEPT_WITH_DATE_PROGRAM", fromParameter, toParameter, programParameter);
    }


    public virtual ObjectResult<DSR_OrderGenerationCell_Result> DSR_OrderGenerationCell()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DSR_OrderGenerationCell_Result>("DSR_OrderGenerationCell");
    }


    public virtual int MeritClosing()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MeritClosing");
    }


    public virtual ObjectResult<usp_HFTypeWiseReport_Result> usp_HFTypeWiseReport(string userHfmisCode)
    {

        var userHfmisCodeParameter = userHfmisCode != null ?
            new ObjectParameter("userHfmisCode", userHfmisCode) :
            new ObjectParameter("userHfmisCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HFTypeWiseReport_Result>("usp_HFTypeWiseReport", userHfmisCodeParameter);
    }


    public virtual ObjectResult<DailyWagesDistrictWise_Result> DailyWagesDistrictWise(string district)
    {

        var districtParameter = district != null ?
            new ObjectParameter("District", district) :
            new ObjectParameter("District", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DailyWagesDistrictWise_Result>("DailyWagesDistrictWise", districtParameter);
    }

}

}

